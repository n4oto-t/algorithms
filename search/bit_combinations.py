# N個の整数からなる集合Aがある。要素をいくつか選び、総和がWとなる組みが存在するか。

"""前提知識
ビットシフト・・・ビット列の中身を左右にシフトすること。
11は、8bitで00001011となる。これに対し右ビットシフトを行うと、00000101になる。2進数で表すと5。
整数Nに右ビットシフトを行うと「 N/2 の小数点以下を切り捨てた値 」となる。11の場合、11/2 = 5.5 = 5となっている。

10進数の11に対し、右1bitシフトする操作は下記のように実装できる。
(11>1) #5
"""

ary = [1, 2, 3, 4]
target = 6
N = len(ary)
result = False

# N個の要素からなる集合の部分集合は2^N通りある。条件を満たす部分集合があるか否かを調べるには、ループで2^N回周せばよい。
for i in range(2**N):
    subset_total = 0
    for j in range(N):
        if (i >> j) & 1:
            subset_total += ary[j]
    if subset_total == target:
        result = True

print(result)
